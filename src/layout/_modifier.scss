

@use '../abstracts/variables' as vars;

@use '../abstracts/mixins' as mixins;



grid[hover] > card,
grid[hover] > stack-grid {transition: transform 0.3s ease, box-shadow 0.3s ease; }

grid[hover] > card:hover,
grid[hover] > stack-grid:hover {@include mixins.set-hover; }


// justify-items: start;

// =============================================================================
// 2. CREATE COLOR MAPS
// These maps link the class name suffix to the color variable.
// =============================================================================

$background-colors: (
  "light": vars.$background-body-light,
  "lighter": vars.$background-alt-light,
  "dark": vars.$background-body-dark,
  "darker": vars.$background-dark,
  "primary": vars.$primary,
  "primary-light": vars.$primary-20,
  "primary-lighter": vars.$primary-08,
  "secondary": vars.$secondary,
  "secondary-light": vars.$secondary-02,
  "secondary-lighter": vars.$secondary-08
);

$text-colors: (
  "primary": vars.$primary,
  "secondary": vars.$secondary,
  "dark": vars.$text-main-dark,
  "light": vars.$text-bright-light
);


// =============================================================================
// 3. GENERATE ATTRIBUTE-BASED UTILITIES WITH @EACH LOOPS
// These loops automatically create all the CSS attribute selectors for you.
// =============================================================================

// Loop for background colors
@each $name, $color in $background-colors {
  [bg="#{$name}"] {background-color: $color ; }
}

// Loop for text colors
@each $name, $color in $text-colors {
  [color="#{$name}"] {
    color: $color ;
  }
}


// =============================================================================
// 2. Padding Dynamic Automatic
// =============================================================================
// .pad-gap {
//   --padding: 0.5rem; 
//   padding: var(--padding);
// }

// /* 3. Update the variable's value at each breakpoint */
// @media (min-width: 48em) {.pad-gap {--padding: 1rem; } }
// @media (min-width: 64em) {.pad-gap {--padding: 1.5rem; } }
// @media (min-width: 75em) {.pad-gap {--padding: 2rem; } }